$date
	Sun Jul 27 02:10:00 2025
$end
$version
	QuestaSim Version 2023.4
$end
$timescale
	1ns
$end

$scope module uvm_root $end
$upscope $end

$scope module axi_top $end
$var reg 1 ! aclk $end
$var reg 1 " areset $end
$upscope $end

$scope begin uvm_pkg $end
$var parameter 32 # UVM_HDL_MAX_WIDTH $end
$var parameter 32 $ UVM_STREAMBITS $end
$var parameter 32 % UVM_RADIX $end
$var parameter 32 & UVM_MACRO_NUMFLAGS $end
$var parameter 32 ' UVM_DEFAULT $end
$var parameter 32 ( UVM_ALL_ON $end
$var parameter 32 ) UVM_FLAGS_ON $end
$var parameter 32 * UVM_FLAGS_OFF $end
$var parameter 32 + UVM_COPY $end
$var parameter 32 , UVM_NOCOPY $end
$var parameter 32 - UVM_COMPARE $end
$var parameter 32 . UVM_NOCOMPARE $end
$var parameter 32 / UVM_PRINT $end
$var parameter 32 0 UVM_NOPRINT $end
$var parameter 32 1 UVM_RECORD $end
$var parameter 32 2 UVM_NORECORD $end
$var parameter 32 3 UVM_PACK $end
$var parameter 32 4 UVM_NOPACK $end
$var parameter 32 5 UVM_PHYSICAL $end
$var parameter 32 6 UVM_ABSTRACT $end
$var parameter 32 7 UVM_READONLY $end
$var parameter 32 8 UVM_NODEFPRINT $end
$var parameter 32 9 UVM_MACRO_EXTRAS $end
$var parameter 32 : UVM_FLAGS $end
$var parameter 32 ; UVM_UNPACK $end
$var parameter 32 < UVM_CHECK_FIELDS $end
$var parameter 32 = UVM_END_DATA_EXTRA $end
$var parameter 32 > UVM_START_FUNCS $end
$var parameter 32 ? UVM_SET $end
$var parameter 32 @ UVM_SETINT $end
$var parameter 32 A UVM_SETOBJ $end
$var parameter 32 B UVM_SETSTR $end
$var parameter 32 C UVM_END_FUNCS $end
$var parameter 32 D UVM_STR_CRC_POLYNOMIAL $end
$var parameter 32 E UVM_STDOUT $end
$var parameter 32 F UVM_LINE_WIDTH $end
$var parameter 32 G UVM_NUM_LINES $end
$var parameter 32 H UVM_SMALL_STRING $end
$var parameter 32 I UVM_LARGE_STRING $end
$var reg 1 J uvm_start_uvm_declarations $end
$var integer 32 K uvm_global_random_seed $end
$var integer 32 L UVM_UNBOUNDED_CONNECTIONS $end

$scope function uvm_hdl_check_path $end
$var integer 32 M uvm_hdl_check_path $end
$upscope $end

$scope function uvm_hdl_deposit $end
$var integer 32 N uvm_hdl_deposit $end
$var reg 1024 O value [1023:0] $end
$upscope $end

$scope function uvm_hdl_force $end
$var integer 32 P uvm_hdl_force $end
$var reg 1024 Q value [1023:0] $end
$upscope $end

$scope task uvm_hdl_force_time $end
$var reg 1024 R value [1023:0] $end
$var time 64 S force_time $end
$upscope $end

$scope function uvm_hdl_release_and_read $end
$var integer 32 T uvm_hdl_release_and_read $end
$var reg 1024 U value [1023:0] $end
$upscope $end

$scope function uvm_hdl_release $end
$var integer 32 V uvm_hdl_release $end
$upscope $end

$scope function uvm_hdl_read $end
$var integer 32 W uvm_hdl_read $end
$var reg 1024 X value [1023:0] $end
$upscope $end

$scope function uvm_dpi_get_next_arg_c $end
$upscope $end

$scope function uvm_dpi_get_tool_name_c $end
$upscope $end

$scope function uvm_dpi_get_tool_version_c $end
$upscope $end

$scope function uvm_dpi_get_next_arg $end
$upscope $end

$scope function uvm_dpi_get_tool_name $end
$upscope $end

$scope function uvm_dpi_get_tool_version $end
$upscope $end

$scope function uvm_dpi_regcomp $end
$upscope $end

$scope function uvm_dpi_regexec $end
$var integer 32 Y uvm_dpi_regexec $end
$upscope $end

$scope function uvm_dpi_regfree $end
$upscope $end

$scope function uvm_re_match $end
$var integer 32 Z uvm_re_match $end
$upscope $end

$scope function uvm_dump_re_cache $end
$upscope $end

$scope function uvm_glob_to_re $end
$upscope $end

$scope function uvm_revision_string $end
$upscope $end

$scope function uvm_radix_to_string $end
$var integer 32 [ radix $end
$upscope $end

$scope function uvm_instance_scope $end
$var reg 8 \ c [7:0] $end
$var integer 32 ] pos $end
$upscope $end

$scope function uvm_oneway_hash $end
$var integer 32 ^ uvm_oneway_hash $end
$var integer 32 _ seed $end
$var reg 1 ` msb $end
$var reg 8 a current_byte [7:0] $end
$var reg 32 b crc1 [31:0] $end
$upscope $end

$scope function uvm_create_random_seed $end
$var integer 32 c uvm_create_random_seed $end
$upscope $end

$scope function uvm_object_value_str $end
$upscope $end

$scope function uvm_leaf_scope $end
$var reg 8 d scope_separator [7:0] $end
$var reg 8 e bracket_match [7:0] $end
$var integer 32 f pos $end
$var integer 32 g bmatches $end
$upscope $end

$scope function uvm_vector_to_string $end
$var reg 4096 h value [4095:0] $end
$var integer 32 i size $end
$var integer 32 j radix $end
$upscope $end

$scope function uvm_get_array_index_int $end
$var integer 32 k uvm_get_array_index_int $end
$var reg 1 l is_wildcard $end
$var integer 32 m i $end
$upscope $end

$scope function uvm_get_array_index_string $end
$var reg 1 n is_wildcard $end
$var integer 32 o i $end
$upscope $end

$scope function uvm_is_array $end
$var reg 1 p uvm_is_array $end
$upscope $end

$scope function uvm_has_wildcard $end
$upscope $end

$scope task run_test $end
$upscope $end

$scope function global_stop_request $end
$upscope $end

$scope function set_global_timeout $end
$var time 64 q timeout $end
$var reg 1 r overridable $end
$upscope $end

$scope function set_global_stop_timeout $end
$var time 64 s timeout $end
$upscope $end

$scope function uvm_report_enabled $end
$var reg 1 t uvm_report_enabled $end
$var integer 32 u verbosity $end
$var reg 2 v severity [1:0] $end
$upscope $end

$scope function uvm_report $end
$var reg 2 w severity [1:0] $end
$var integer 32 x verbosity $end
$var integer 32 y line $end
$upscope $end

$scope function uvm_report_info $end
$var integer 32 z verbosity $end
$var integer 32 { line $end
$upscope $end

$scope function uvm_report_warning $end
$var integer 32 | verbosity $end
$var integer 32 } line $end
$upscope $end

$scope function uvm_report_error $end
$var integer 32 ~ verbosity $end
$var integer 32 !! line $end
$upscope $end

$scope function uvm_report_fatal $end
$var integer 32 "! verbosity $end
$var integer 32 #! line $end
$upscope $end

$scope function uvm_string_to_severity $end
$var reg 1 $! uvm_string_to_severity $end
$var reg 2 %! sev [1:0] $end
$upscope $end

$scope function uvm_string_to_action $end
$upscope $end

$scope function set_config_int $end
$var reg 4096 &! value [4095:0] $end
$upscope $end

$scope function set_config_object $end
$var reg 1 '! clone $end
$upscope $end

$scope function set_config_string $end
$upscope $end

$scope function uvm_is_match $end
$var reg 1 (! uvm_is_match $end
$upscope $end

$scope function uvm_string_to_bits $end
$var reg 115200 )! uvm_string_to_bits [115199:0] $end
$upscope $end

$scope function uvm_bits_to_string $end
$var reg 115200 *! str [115199:0] $end
$upscope $end

$scope task uvm_wait_for_nba_region $end
$var integer 32 +! nba $end
$var integer 32 ,! next_nba $end
$upscope $end

$scope function uvm_split_string $end
$upscope $end

$scope function uvm_hdl_concat2string $end
$upscope $end
$upscope $end

$scope begin axi_spkg $end
$upscope $end

$scope begin axi_mpkg $end
$upscope $end

$scope begin axi_env_pkg $end
$upscope $end

$scope begin axi_test_pkg $end
$upscope $end

$scope begin questa_uvm_pkg $end
$upscope $end

$scope begin std $end
